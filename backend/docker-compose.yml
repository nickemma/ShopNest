services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: shopnest
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    command: redis-server --requirepass techieemma101
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_management remove_definitions 'after_publish'"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    image: shopnest-user-service:latest
    command: air -c .air-user.toml
    volumes:
      - ./services/user-service:/app
      - ./services/user-service/tmp:/app/tmp
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DB_URL=postgres://user:pass@postgres:5432/shopnest?sslmode=disable
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=techieemma101
      - RABBITMQ_URL=amqp://user:pass@rabbitmq:5672/

  email-worker:
    image: shopnest-user-service:latest
    command: air -c .air-email.toml
    volumes:
      - ./services/user-service:/app
      - ./services/user-service/tmp:/app/tmp
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://user:pass@rabbitmq:5672/
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}

  kong:
    image: kong:latest
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_GUI_URL=http://localhost:8002
    volumes:
      - ./api-gateway/kong.yml:/kong/kong.yml
    ports:
      - "8000:8000"  # Proxy
      - "8001:8001"  # Admin API
      - "8002:8002"  # Admin GUI

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8081:8080"
    volumes:
      - ./docs/api/swagger.yaml:/usr/share/nginx/html/swagger.yaml
    environment:
      - SWAGGER_JSON=/usr/share/nginx/html/swagger.yaml

volumes:
  postgres-data:
  rabbitmq-data: